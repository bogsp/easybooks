{"version":3,"sources":["src/app/tabs/income/income.page.html","src/app/tabs/income/income-routing.module.ts","src/app/tabs/income/income.module.ts","src/app/tabs/income/income.page.scss","src/app/tabs/income/income.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Income</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button slot=\\\"secondary\\\" (click)=\\\"presentModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <ion-grid>\\n    <ion-row>\\n      <!-- <ion-col size-md=\\\"4\\\" offset-md=\\\"4\\\">\\n        <ion-segment (ionChange)=\\\"filterDates($event)\\\">\\n          <ion-segment-button value=\\\"All\\\" checked>\\n            <ion-label>All</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"Today\\\">\\n            <ion-label>Today</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"Weekly\\\">\\n            <ion-label>Weekly</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"Monthly\\\">\\n            <ion-label>Monthly</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </ion-col> -->\\n      <ion-col size-md=\\\"4\\\" offset-md=\\\"4\\\">\\n        <ion-card class=\\\"ion-padding\\\">\\n          <ion-card-header>\\n            <ion-card-title>Summary</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label color=\\\"medium\\\"><i><small>Total Income</small></i></ion-label>\\n              <ion-text>{{ getAmount() | currency: curr }}</ion-text>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col class=\\\"ion-padding\\\" size-md=\\\"4\\\" offset-md=\\\"4\\\">\\n        <ion-list>\\n            <ion-item *ngFor=\\\"let item of items\\\" (click)=\\\"presentModal(item)\\\">\\n              <ion-label position=\\\"fixed\\\">{{ item.date | date: 'MMM dd' }}</ion-label>\\n              <ion-label>{{ item.type }}</ion-label>\\n              <p>{{ item.amount | currency: curr }}</p>\\n            </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncomePage } from './income.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { IncomePageRoutingModule } from './income-routing.module';\nimport { IncomeModalPageModule } from '../../modals';\n\nimport { IncomePage } from './income.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    IncomePageRoutingModule,\n    IncomeModalPageModule\n  ],\n  declarations: [IncomePage]\n})\nexport class IncomePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvaW5jb21lL2luY29tZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { SubSink } from 'subsink';\n\nimport { AppState, IncomeService } from '../../store';\nimport { Types, Income } from '../../store/models';\nimport { IncomeModalPage } from '../../modals';\n\n@Component({\n  selector: 'app-income',\n  templateUrl: './income.page.html',\n  styleUrls: ['./income.page.scss'],\n})\nexport class IncomePage implements OnInit, OnDestroy {\n  private subs = new SubSink();\n  item: Income;\n  items: Income[];\n  itemId: string;\n  isEditing: boolean;\n  isLoading: boolean;\n  total: number;\n  types: Types[];\n  error: { header: string, message: string };\n  curr: string;\n\n  constructor(\n    private store: Store<AppState>,\n    private incomeService: IncomeService,\n    public loadingController: LoadingController,\n    public modalController: ModalController\n  ) { }\n\n  ngOnInit() {\n    this.subs.add(\n      this.store\n        .select('user')\n        .pipe(map(state => state.curency))\n        .subscribe(curency => { this.curr = curency; }),\n\n      this.store\n        .select('income')\n        .pipe(map(state => state.types))\n        .subscribe(types => { this.types = types; }),\n\n      this.store\n        .select('income')\n        .pipe(map(state => state.items))\n        .subscribe(items => { this.items = items; }),\n\n      this.store\n        .select('expenses')\n        .pipe(map(state => state.total))\n        .subscribe(total => { this.total = total; }),\n    );\n  }\n\n  getAmount(id?: string) {\n    if (id) {\n      return this.items\n        .filter(exp => exp.typeid === id)\n        .reduce((a, e) => a + e.amount, 0);\n    }\n    return this.items.reduce((a, e) => a + e.amount, 0);\n  }\n\n  filterDates(event: any) { console.log(event.detail.value); }\n\n  filterArr(id: string) { return this.items.filter(exp => exp.typeid === id); }\n\n  ngOnDestroy() { this.subs.unsubscribe(); }\n\n  refresh(event: any) {\n    // this.incomeService.fetchAll();\n    setTimeout(() => {\n      event.target.complete();\n    }, 2000);\n  }\n\n  async presentModal(i?: Income) {\n    const modal = await this.modalController.create({\n      component: IncomeModalPage,\n      componentProps: {\n        item: i,\n        types: this.types\n      }\n    });\n    return await modal.present();\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      duration: 1000\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"income-income-module-es5.js"}