{"version":3,"sources":["src/app/modals/expense-modal/expense-modal.page.html","src/app/modals/income-modal/income-modal.page.html","src/app/modals/list-modal/list-modal.page.html","src/app/modals/user-modal/user-modal.page.html","src/app/modals/expense-modal/expense-modal-routing.module.ts","src/app/modals/expense-modal/expense-modal.module.ts","src/app/modals/expense-modal/expense-modal.page.scss","src/app/modals/expense-modal/expense-modal.page.ts","src/app/modals/income-modal/income-modal-routing.module.ts","src/app/modals/income-modal/income-modal.module.ts","src/app/modals/income-modal/income-modal.page.scss","src/app/modals/income-modal/income-modal.page.ts","src/app/modals/list-modal/list-modal-routing.module.ts","src/app/modals/list-modal/list-modal.module.ts","src/app/modals/list-modal/list-modal.page.scss","src/app/modals/list-modal/list-modal.page.ts","src/app/modals/user-modal/currencies.ts","src/app/modals/user-modal/user-modal-routing.module.ts","src/app/modals/user-modal/user-modal.module.ts","src/app/modals/user-modal/user-modal.page.scss","src/app/modals/user-modal/user-modal.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isNew ? 'New Expense' : 'Edit Expense' }}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button slot=\\\"secondary\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"ion-padding\\\"></div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"form\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\" width=\\\"full\\\">Date*</ion-label>\\n                      <ion-datetime formControlName=\\\"date\\\" displayFormat=\\\"MMM DD, YYYY\\\" [value]=\\\"\\\"></ion-datetime>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Category*</ion-label>\\n                      <ion-select autocomplete formControlName=\\\"category\\\" (ionChange)=\\\"getTypes($event)\\\">\\n                        <ion-select-option *ngFor=\\\"let item of categories\\\" [value]=\\\"item\\\">\\n                          {{ item.name }}</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Type*</ion-label>\\n                      <ion-select autocomplete formControlName=\\\"type\\\">\\n                        <ion-select-option *ngFor=\\\"let item of types\\\" [value]=\\\"item\\\">{{ item.name }}\\n                        </ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Amount*</ion-label>\\n                      <ion-input type=\\\"number\\\" autocomplete formControlName=\\\"amount\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Description</ion-label>\\n                      <ion-textarea rows=\\\"6\\\" cols=\\\"20\\\" formControlName=\\\"description\\\"></ion-textarea>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                      <ion-button (click)=\\\"submit()\\\">Submit</ion-button>\\n                      <ion-button (click)=\\\"dismiss()\\\" color=\\\"danger\\\">Cancel</ion-button>\\n                      <ion-button *ngIf=\\\"!isNew\\\" (click)=\\\"delete()\\\" color=\\\"danger\\\" fill=\\\"outline\\\">Delete</ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isNew ? 'New Income' : 'Edit Income' }}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button slot=\\\"secondary\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"ion-padding\\\"></div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"form\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\" width=\\\"full\\\">Date*</ion-label>\\n                      <ion-datetime formControlName=\\\"date\\\" displayFormat=\\\"MMM DD, YYYY\\\" [value]=\\\"\\\"></ion-datetime>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Type*</ion-label>\\n                      <ion-select autocomplete formControlName=\\\"type\\\">\\n                        <ion-select-option *ngFor=\\\"let item of types\\\" [value]=\\\"item\\\">{{ item.name }}\\n                        </ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Amount*</ion-label>\\n                      <ion-input type=\\\"number\\\" autocomplete formControlName=\\\"amount\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Description</ion-label>\\n                      <ion-textarea rows=\\\"6\\\" cols=\\\"20\\\" formControlName=\\\"description\\\"></ion-textarea>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                      <ion-button (click)=\\\"submit()\\\">Submit</ion-button>\\n                      <ion-button (click)=\\\"dismiss()\\\" color=\\\"danger\\\">Cancel</ion-button>\\n                      <ion-button *ngIf=\\\"!isNew\\\" (click)=\\\"delete()\\\" color=\\\"danger\\\" fill=\\\"outline\\\">Delete</ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ type.name }}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button slot=\\\"secondary\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-text>{{ type.description }}</ion-text>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"items?.length <= 0\\\">\\n      <ion-col>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-text>There are currently no items on this list.</ion-text>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"items?.length > 0\\\">\\n      <ion-col>\\n        <ion-list>\\n            <ion-item *ngFor=\\\"let item of items\\\" (click)=\\\"presentModal(item)\\\">\\n            <ion-text class=\\\"date-label\\\" position=\\\"fixed\\\">{{ item.date | date: 'MMM dd' }}</ion-text>\\n            <ion-label>{{ item.description }}</ion-label>\\n            <p>{{ item.amount | currency: curr }}</p>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ !item?.firstname ? 'New Profile' : item.firstname + ' ' + item.lastname}}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button slot=\\\"secondary\\\" (click)=\\\"dismiss()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row *ngIf=\\\"isNew\\\">\\n      <ion-col>\\n        <div class=\\\"ion-padding\\\">\\n          <p>Please complete your profile.</p>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-content>\\n            <form [formGroup]=\\\"form\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">First Name*</ion-label>\\n                      <ion-input type=\\\"text\\\" autocomplete formControlName=\\\"firstname\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Last Name*</ion-label>\\n                      <ion-input type=\\\"text\\\" autocomplete formControlName=\\\"lastname\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Currency</ion-label>\\n                      <ion-select autocomplete formControlName=\\\"currency\\\">\\n                        <ion-select-option *ngFor=\\\"let i of currencies\\\" [value]=\\\"i\\\">{{ i }}</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row *ngIf=\\\"!isNew\\\">\\n                  <ion-col>\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">List View</ion-label>\\n                      <ion-select autocomplete formControlName=\\\"listview\\\">\\n                        <ion-select-option [value]=\\\"'All'\\\" selected>All</ion-select-option>\\n                        <ion-select-option [value]=\\\"'Today'\\\">Today</ion-select-option>\\n                        <ion-select-option [value]=\\\"'Weekly'\\\">Weekly</ion-select-option>\\n                        <ion-select-option [value]=\\\"'Monthly'\\\">Monthly</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <div class=\\\"ion-padding\\\">\\n                      <ion-button (click)=\\\"submit()\\\">Submit</ion-button>\\n                      &nbsp;\\n                      <ion-button (click)=\\\"dismiss()\\\" color=\\\"danger\\\">Cancel</ion-button>\\n                    </div>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExpenseModalPage } from './expense-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpenseModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpenseModalPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ExpenseModalPageRoutingModule } from './expense-modal-routing.module';\n\nimport { ExpenseModalPage } from './expense-modal.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ExpenseModalPageRoutingModule\n  ],\n  declarations: [ExpenseModalPage]\n})\nexport class ExpenseModalPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9leHBlbnNlLW1vZGFsL2V4cGVuc2UtbW9kYWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NavParams, ModalController, AlertController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { Category, Types, Expense } from '../../store/models';\nimport { ExpenseService } from '../../store';\n\n@Component({\n  selector: 'app-expense-modal',\n  templateUrl: './expense-modal.page.html',\n  styleUrls: ['./expense-modal.page.scss'],\n})\nexport class ExpenseModalPage implements OnInit {\n  @Input() categories: Category[];\n  @Input() item: Expense;\n  form: FormGroup;\n  types: Types[];\n  isNew: boolean;\n  id: string;\n\n  constructor(\n    private expenseService: ExpenseService,\n    private modalCtrl: ModalController,\n    private navParams: NavParams,\n    public alertController: AlertController\n  ) {\n    this.item = this.navParams.get('item');\n    this.categories = this.navParams.get('categories');\n    this.isNew = !this.item;\n    if (!this.isNew) { this.getTypes(this.item.categoryId); }\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      date: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      category: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      type: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      amount: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      description: new FormControl(null, {\n        updateOn: 'blur',\n        validators: []\n      })\n    });\n    if (!this.isNew) {\n      this.id = this.item.id;\n      this.form.patchValue({\n        date: this.item.date,\n        category: this.getCategory(this.item.categoryId),\n        type: this.getType(this.item.typeid),\n        amount: this.item.amount,\n        description: this.item.description\n      });\n    }\n  }\n\n  submit() {\n    if (this.form.valid) {\n      this.item = {\n        date: this.form.value.date,\n        category: this.form.value.category.name,\n        categoryId: this.form.value.category.id,\n        type: this.form.value.type.name,\n        typeid: this.form.value.type.id,\n        amount: this.form.value.amount,\n        description: this.form.value.description\n      };\n      if (this.isNew) {\n        this.expenseService.add(this.item);\n      } else {\n        this.item.id = this.id;\n        this.expenseService.update(this.item);\n      }\n      this.dismiss();\n    } else { this.presentAlert(); }\n  }\n\n  delete() {\n    if (!this.isNew) {\n      this.expenseService.delete(this.id);\n      this.dismiss();\n    }\n  }\n\n  getCategory(id: string) { return this.categories.find(c => c.id === id); }\n\n  getType(id: string) { return this.types.find(t => t.id === id); }\n\n  getTypes(e: any) {\n    const catID = this.isNew ? e.detail.value.id : e;\n    this.categories.map(i => { if (i.id === catID) { this.types = i.types; } });\n  }\n\n  dismiss() { this.modalCtrl.dismiss({ dismissed: true }); }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Incomplete Form',\n      message: 'Please complete the required fields.',\n      buttons: [{ text: 'Ok' }]\n    });\n    await alert.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncomeModalPage } from './income-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncomeModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncomeModalPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { IncomeModalPageRoutingModule } from './income-modal-routing.module';\n\nimport { IncomeModalPage } from './income-modal.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    IncomeModalPageRoutingModule\n  ],\n  declarations: [IncomeModalPage]\n})\nexport class IncomeModalPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9pbmNvbWUtbW9kYWwvaW5jb21lLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ModalController, NavParams, AlertController } from '@ionic/angular';\n\nimport { Types, Income } from '../../store/models';\nimport { IncomeService } from '../../store';\n\n@Component({\n  selector: 'app-income-modal',\n  templateUrl: './income-modal.page.html',\n  styleUrls: ['./income-modal.page.scss'],\n})\nexport class IncomeModalPage implements OnInit {\n  @Input() types: Types[];\n  @Input() item: Income;\n  form: FormGroup;\n  isNew: boolean;\n  id: string;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private navParams: NavParams,\n    private incomeService: IncomeService,\n    public alertController: AlertController\n  ) {\n    this.item = this.navParams.get('item');\n    this.isNew = !this.item;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      date: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      type: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      amount: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      description: new FormControl(null, {\n        updateOn: 'blur',\n        validators: []\n      })\n    });\n\n    if (!this.isNew) {\n      this.id = this.item.id;\n      this.form.patchValue({\n        date: this.item.date,\n        type: this.getType(this.item.typeid),\n        amount: this.item.amount,\n        description: this.item.description\n      });\n    }\n  }\n\n  submit() {\n    if (this.form.valid) {\n      this.item = {\n        date: this.form.value.date,\n        type: this.form.value.type.name,\n        typeid: this.form.value.type.id,\n        amount: this.form.value.amount,\n        description: this.form.value.description\n      };\n      if (this.isNew) {\n        this.incomeService.add(this.item);\n      } else {\n        this.item.id = this.id;\n        this.incomeService.update(this.item);\n      }\n      this.dismiss();\n    } else { this.presentAlert(); }\n  }\n\n  delete() {\n    if (!this.isNew) {\n      this.incomeService.delete(this.id);\n      this.dismiss();\n    }\n  }\n\n  getType(id: string) { return this.types.find(t => t.id === id); }\n\n  dismiss() { this.modalCtrl.dismiss({ dismissed: true }); }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Incomplete Form',\n      message: 'Please complete the required fields.',\n      buttons: [{ text: 'Ok' }]\n    });\n\n    await alert.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListModalPage } from './list-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListModalPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ListModalPageRoutingModule } from './list-modal-routing.module';\n\nimport { ListModalPage } from './list-modal.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ListModalPageRoutingModule\n  ],\n  declarations: [ListModalPage]\n})\nexport class ListModalPageModule {}\n","export default \".date-label {\\n  margin-right: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWxzL2xpc3QtbW9kYWwvRTpcXFByb2plY3RzXFxkZXYgc2FuZGJveFxcZWFzeWJvb2tzL3NyY1xcYXBwXFxtb2RhbHNcXGxpc3QtbW9kYWxcXGxpc3QtbW9kYWwucGFnZS5zY3NzIiwic3JjL2FwcC9tb2RhbHMvbGlzdC1tb2RhbC9saXN0LW1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2RhbHMvbGlzdC1tb2RhbC9saXN0LW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRlLWxhYmVsIHtcclxuICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxufSIsIi5kYXRlLWxhYmVsIHtcbiAgbWFyZ2luLXJpZ2h0OiAycmVtO1xufSJdfQ== */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { map } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { SubSink } from 'subsink';\n\nimport { AppState, ExpenseService } from '../../store';\nimport { Types, Expense, Category } from '../../store/models';\nimport { ExpenseModalPage } from '../expense-modal/expense-modal.page';\n\n@Component({\n  selector: 'app-list-modal',\n  templateUrl: './list-modal.page.html',\n  styleUrls: ['./list-modal.page.scss'],\n})\nexport class ListModalPage implements OnInit, OnDestroy {\n  @Input() category: Category;\n  @Input() type: Types;\n  @Input() curr: string;\n  private subs = new SubSink();\n  categories: Category[];\n  items: Expense[];\n\n  constructor(\n    private store: Store<AppState>,\n    private expenseService: ExpenseService,\n    private modalController: ModalController,\n    private navParams: NavParams\n  ) { this.category = this.navParams.get('category'); }\n\n  ngOnInit() {\n    this.subs.add(\n      this.store\n        .select('category')\n        .pipe(map(state => state.items))\n        .subscribe(items => { this.categories = items; }),\n      this.store\n        .select('expenses')\n        .pipe(map(state => state.items))\n        .subscribe(items => {\n          this.items = items\n            .filter(c => c.categoryId === this.category.id)\n            .filter(t => t.typeid === this.type.id);\n        }),\n    );\n  }\n\n  ngOnDestroy() { this.subs.unsubscribe(); }\n\n  async presentModal(i: Expense) {\n    const modal = await this.modalController.create({\n      component: ExpenseModalPage,\n      componentProps: {\n        item: i,\n        categories: this.categories\n      }\n    });\n    return await modal.present();\n  }\n\n  dismiss() { this.modalController.dismiss({ dismissed: true }); }\n\n}\n","export const currencies = [\r\n    'AED', 'AFN', 'ALL', 'AMD', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN',\r\n    'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD',\r\n    'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUP', 'CVE', 'CZK',\r\n    'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GHS',\r\n    'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF',\r\n    'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY',\r\n    'KES', 'KGS', 'KHR', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD',\r\n    'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN',\r\n    'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG',\r\n    'QAR', 'RON', 'RSD', 'RUB', 'RWF',\r\n    'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'STN', 'SYP', 'SZL',\r\n    'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS',\r\n    'UAH', 'UGX', 'USD', 'UYU', 'UZS',\r\n    'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWL'\r\n  ];\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserModalPage } from './user-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserModalPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { UserModalPageRoutingModule } from './user-modal-routing.module';\n\nimport { UserModalPage } from './user-modal.page';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    UserModalPageRoutingModule\n  ],\n  declarations: [UserModalPage]\n})\nexport class UserModalPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy91c2VyLW1vZGFsL3VzZXItbW9kYWwucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ModalController, AlertController, NavParams, LoadingController } from '@ionic/angular';\n\nimport { ProfileService, AuthService } from '../../store';\nimport { Profile } from '../../store/models';\nimport { currencies } from './currencies';\n\n@Component({\n  selector: 'app-user-modal',\n  templateUrl: './user-modal.page.html',\n  styleUrls: ['./user-modal.page.scss'],\n})\nexport class UserModalPage implements OnInit {\n  @Input() isNew: boolean;\n  @Input() item: Profile;\n  @Input() email: string;\n  form: FormGroup;\n  currencies = currencies;\n\n  constructor(\n    private authService: AuthService,\n    private profileService: ProfileService,\n    private navParams: NavParams,\n    private modalCtrl: ModalController,\n    public alertController: AlertController,\n    public loadingController: LoadingController,\n  ) {\n    this.item = this.navParams.get('item');\n    this.isNew = !this.item;\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      firstname: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      lastname: new FormControl(null, {\n        updateOn: 'blur',\n        validators: [\n          Validators.required\n        ]\n      }),\n      currency: new FormControl(null, {\n        updateOn: 'blur',\n        validators: []\n      }),\n      listview: new FormControl(null, {\n        updateOn: 'blur',\n        validators: []\n      }),\n    });\n    if (!this.isNew) {\n      this.form.patchValue({\n        firstname: this.item.firstname,\n        lastname: this.item.lastname,\n        currency: this.item.currency,\n        listview: this.item.listview,\n      });\n    }\n  }\n\n  submit() {\n    if (this.form.valid) {\n      const prof = {\n        id: this.authService.user.id,\n        firstname: this.form.value.firstname,\n        lastname: this.form.value.lastname,\n        email: this.authService.user.email,\n        currency: this.form.value.currency,\n        valid: true\n      } as Profile;\n      if (this.isNew && this.item === null) {\n        prof.listview = 'All';\n        this.profileService.addCustom(prof);\n      } else {\n        prof.listview = this.form.value.listview;\n        this.profileService.update(prof);\n      }\n      this.presentLoading();\n      this.dismiss();\n    }\n  }\n\n  dismiss() { this.modalCtrl.dismiss({ dismissed: true }); }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({ duration: 2000 });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Incomplete Form',\n      message: 'Please complete the required fields.',\n      buttons: [{ text: 'Ok' }]\n    });\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"default~dashboard-dashboard-module~income-income-module~profile-profile-module-es5.js"}